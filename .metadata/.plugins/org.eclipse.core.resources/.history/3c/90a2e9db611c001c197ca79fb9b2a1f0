package listememoire;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import dao.ClientDao;
import metier.Client;
import metier.Revue;

public class ListeMemoireClientDAO implements ClientDAO {
	private static ListeMemoireClientDAO instance;
	private List<Client> donnees;

	private ListeMemoireClientDAO() {
		this.donnees = new ArrayList<>();
	}

	private int existanceID(Client objet) {
		for (Client cl : donnees) {
			if (objet.getCle() == cl.getCle())
				return donnees.indexOf(objet);
		}
		return -1;
	}

	public static ListeMemoireClientDAO getInstance() {
		if (instance == null)
			instance = new ListeMemoireClientDAO();
		return instance;
	}

	@Override
	public boolean create(Client object) throws SQLException {
		object.setCle(donnees.size() + 1);
		boolean validAjout = this.donnees.add(object);
		return validAjout;
	}

	@Override
	public boolean update(Client object) throws SQLException {
		int idx = this.donnees.indexOf(object);
		if (idx == -1) {
			throw new IllegalArgumentException("Tentative de modification d'un objet inexistant");

		} else {
			this.donnees.set(idx, object);
		}
		return true;
	}

	@Override
	public boolean delete(Client object) throws SQLException {
		Client supprime;
		int idx = this.donnees.indexOf(object);
		if (idx == -1) {
			throw new IllegalArgumentException("Tentative de suppression d'un objet inexistant");
		} else {
			supprime = this.donnees.remove(idx);
		}
		return object.equals(supprime);
	}

	@Override
	public Client getById(int id) throws SQLException {
		Client objet = new Client(id, "test", "test", "test", "test", "test", "test", "test");
		int index = existanceID(objet);
		if (index > -1) {
			return this.donnees.get(index);
		}
		throw new IllegalArgumentException("Aucun objet ne possede cet identifiant");

	}

	@Override
	public ArrayList<Client> getByNomPrenom(String nom, String prenom) throws SQLException {
		ArrayList<Client> listeClient = new ArrayList<>();
		for (Client c : donnees) {
			if (c.getNom() == nom && c.getPrenom() == prenom)
				listeClient.add(c);
		}
		return listeClient;
	}

	@Override
	public ArrayList<Client> findAll() throws SQLException {
		return (ArrayList<Client>) this.donnees;
	}
}
