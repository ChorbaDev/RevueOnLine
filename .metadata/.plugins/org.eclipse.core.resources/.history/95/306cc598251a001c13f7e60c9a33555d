package listememoire;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import dao.AbonnementDao;
import metier.Abonnement;

public class ListeMemoireAbonnementDAO implements AbonnementDAO {
	private static ListeMemoireAbonnementDAO instance;
	private List<Abonnement> donnees;

	private ListeMemoireAbonnementDAO() {
		donnees = new ArrayList<>();
	}

	public static ListeMemoireAbonnementDAO getInstance() {
		if (instance == null)
			instance = new ListeMemoireAbonnementDAO();
		return instance;
	}

	@Override
	public boolean create(Abonnement objet) throws SQLException {
		objet.setId(donnees.size() + 1);
		boolean ok = this.donnees.add(objet);
		return ok;
	}

	@Override
	public boolean update(Abonnement objet) throws SQLException {
		try {
			this.donnees.set(objet.getId() - 1, objet);
		} catch (Exception e) {
			throw new IllegalArgumentException("Tentative de modification d'un objet inexistant");
		}
		return true;
	}

	@Override
	public boolean delete(Abonnement objet) throws SQLException {
		boolean done;
		for (Abonnement ab : donnees) {
			if (objet.getId() == ab.getId()) 
			done =this.donnees.remove(ab);
			}

	
		 
	}

	@Override
	public Abonnement getById(int id) throws SQLException {

		for (Abonnement ab : donnees) {
			if (ab.getId() == id)
				return ab;
		}
		throw new IllegalArgumentException("Aucun objet ne possede cet identifiant");

	}

	@Override
	public ArrayList<Abonnement> getByClient(int cl) throws SQLException {
		ArrayList<Abonnement> liste = new ArrayList<>();
		for (Abonnement ab : donnees) {
			if (ab.getId_client() == cl)
				liste.add(ab);
		}
		return liste;
	}

	@Override
	public ArrayList<Abonnement> findAll() throws SQLException {
		return (ArrayList<Abonnement>) this.donnees;
	}
}
