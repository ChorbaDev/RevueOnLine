package ListeMemoire;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import DAO.RevueDAO;
import Metier.Revue;

public class ListeMemoireRevueDAO implements RevueDAO {
	private static ListeMemoireRevueDAO instance;
	private List<Revue> donnees;

	private ListeMemoireRevueDAO() {
		this.donnees = new ArrayList<>();
	}

	public static ListeMemoireRevueDAO getInstance() {
		if (instance == null)
			instance = new ListeMemoireRevueDAO();
		return instance;
	}

	@Override
	public boolean create(Revue objet) throws SQLException {
		while (existanceID(objet) >= 0) {
			objet.setId(objet.getId() + 1);
		}
		return this.donnees.add(objet);
	}

	private int existanceID(Revue objet) {
		for (Revue ab : donnees) {
			if (objet.getId() == ab.getId())
				return donnees.indexOf(objet);
		}
		return -1;
	}

	@Override
	public boolean update(Revue objet) throws SQLException {
		int index = existanceID(objet);
		if (index > -1) {
			this.donnees.set(index, objet);
			return true;
		}
		throw new IllegalArgumentException("Tentative de suppression d'un objet inexistant");
	}

	@Override
	public boolean delete(Revue objet) throws SQLException {
		int index = existanceID(objet);
		if (index > -1) {
			return this.donnees.remove(objet);
		}
		throw new IllegalArgumentException("Tentative de suppression d'un objet inexistant");
	}

	@Override
	public ArrayList<Revue> getByTitre(String titre) throws SQLException {
		ArrayList<Revue> liste = new ArrayList<>();
		for (Revue r : donnees) {
			if (r.getTitre() == titre)
				liste.add(r);
		}
		return liste;
	}

	@Override
	public ArrayList<Revue> findAll() throws SQLException {
		return (ArrayList<Revue>) this.donnees;
	}

}
